datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
  output   = "../app/prisma-client"
}

// generator zod {
//   provider      = "zod-prisma"
//   output        = "./zod"
//   relationModel = "default"
//   imports       = "../specs"
// }

model User {
  email    String  @unique
  id       String  @unique // TI_ID
  username String
  Access   Access? @relation(fields: [accessId], references: [id])
  accessId Int?    @map("departmentAccessId")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  password Password?

  Ctc               Ctc[]
  DepartmentMapping DepartmentMapping[]
}

model Password {
  hash String

  user User   @relation(fields: [id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  id   String @unique
}

model Ctc {
  id       Int      @id @default(autoincrement())
  ctc      Int /// @zod.min(0)
  fromDate DateTime /// @zod.custom(imports.IsoDate)
  toDate   DateTime /// @zod.custom(imports.IsoDate)
  user     User     @relation(fields: [tiId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  tiId     String
}

enum Billable {
  billable
  nonBillable
}

model DepartmentMapping {
  id           Int        @id @default(autoincrement())
  ctc          Int /// @zod.min(0)
  fromDate     DateTime
  toDate       DateTime
  category     Billable
  Department   Department @relation(fields: [departmentId], references: [id])
  departmentId Int
  User         User       @relation(fields: [tiId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  tiId         String
}

model Department {
  id   Int    @id @default(autoincrement())
  name String

  Budget      Budget[]
  Expenditure Expenditure[]

  Access            Access[]
  DepartmentMapping DepartmentMapping[]
}

model Budget {
  id            Int        @id @default(autoincrement())
  amount        Int
  // @TODO: should be int/string
  financialYear DateTime
  Department    Department @relation(fields: [departmentId], references: [id])
  departmentId  Int
  category      Billable
}

model Expenditure {
  id           Int        @id @default(autoincrement())
  category     Billable
  date         DateTime
  amount       Int
  remarks      String
  Department   Department @relation(fields: [departmentId], references: [id])
  departmentId Int
}

model Access {
  id               Int        @id @default(autoincrement())
  parentCostCenter String // @TODO:
  Department       Department @relation(fields: [departmentId], references: [id])
  departmentId     Int
  User             User[]
}
