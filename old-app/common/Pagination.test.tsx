import { Pagination } from '../components/Pagination'
import { render } from '@testing-library/react'
import userEvent from '@testing-library/user-event'
import React from 'react'

// sibling count = 3 and count = 10

test('renders the correct content', () => {
  const { getByRole } = render(<Pagination count={10} siblingCount={3} />)
  getByRole('button', { name: /1/i })
  getByRole('button', { name: /2/i })
  getByRole('button', { name: /3/i })
  getByRole('button', { name: /4/i })
  getByRole('button', { name: /5/i })
  getByRole('button', { name: /6/i })
  getByRole('button', { name: /7/i })
})
test('when button 1 is pressed', () => {
  const { getByRole } = render(<Pagination count={10} siblingCount={3} />)
  userEvent.click(getByRole('button', { name: /1/i }))
  getByRole('button', { name: /1/i })
  getByRole('button', { name: /2/i })
  getByRole('button', { name: /3/i })
  getByRole('button', { name: /4/i })
  getByRole('button', { name: /5/i })
  getByRole('button', { name: /6/i })
  getByRole('button', { name: /7/i })
})
test('when button 2 is pressed', () => {
  const { getByRole } = render(<Pagination count={10} siblingCount={3} />)
  userEvent.click(getByRole('button', { name: /2/i }))
  getByRole('button', { name: /1/i })
  getByRole('button', { name: /2/i })
  getByRole('button', { name: /3/i })
  getByRole('button', { name: /4/i })
  getByRole('button', { name: /5/i })
  getByRole('button', { name: /6/i })
  getByRole('button', { name: /7/i })
})
test('when button 3 is pressed', () => {
  const { getByRole } = render(<Pagination count={10} siblingCount={3} />)
  userEvent.click(getByRole('button', { name: /3/i }))
  getByRole('button', { name: /1/i })
  getByRole('button', { name: /2/i })
  getByRole('button', { name: /3/i })
  getByRole('button', { name: /4/i })
  getByRole('button', { name: /5/i })
  getByRole('button', { name: /6/i })
  getByRole('button', { name: /7/i })
})
test('when button 4 is pressed', () => {
  const { getByRole } = render(<Pagination count={10} siblingCount={3} />)
  userEvent.click(getByRole('button', { name: /4/i }))
  getByRole('button', { name: /2/i })
  getByRole('button', { name: /3/i })
  getByRole('button', { name: /4/i })
  getByRole('button', { name: /5/i })
  getByRole('button', { name: /6/i })
  getByRole('button', { name: /6/i })
  getByRole('button', { name: /7/i })
})
test('when button 5 is pressed', () => {
  const { getByRole } = render(<Pagination count={10} siblingCount={3} />)
  userEvent.click(getByRole('button', { name: /5/i }))
  getByRole('button', { name: /2/i })
  getByRole('button', { name: /3/i })
  getByRole('button', { name: /4/i })
  getByRole('button', { name: /5/i })
  getByRole('button', { name: /6/i })
  getByRole('button', { name: /7/i })
  getByRole('button', { name: /8/i })
})
test('when button 6 is pressed', () => {
  const { getByRole } = render(<Pagination count={10} siblingCount={3} />)

  userEvent.click(getByRole('button', { name: /6/i }))
  getByRole('button', { name: /3/i })
  getByRole('button', { name: /4/i })
  getByRole('button', { name: /5/i })
  getByRole('button', { name: /6/i })
  getByRole('button', { name: /7/i })
  getByRole('button', { name: /8/i })
  getByRole('button', { name: /9/i })
})
test('when button 7 is pressed', () => {
  const { getByRole } = render(<Pagination count={10} siblingCount={3} />)
  userEvent.click(getByRole('button', { name: /7/i }))

  getByRole('button', { name: /4/i })
  getByRole('button', { name: /5/i })
  getByRole('button', { name: /6/i })
  getByRole('button', { name: /7/i })
  getByRole('button', { name: /8/i })
  getByRole('button', { name: /9/i })
  getByRole('button', { name: /10/i })
})
test('when button 8 is pressed', () => {
  const { getByRole } = render(<Pagination count={10} siblingCount={3} />)

  userEvent.click(getByRole('button', { name: /7/i }))
  userEvent.click(getByRole('button', { name: /8/i }))
  getByRole('button', { name: /4/i })
  getByRole('button', { name: /5/i })
  getByRole('button', { name: /6/i })
  getByRole('button', { name: /7/i })
  getByRole('button', { name: /8/i })
  getByRole('button', { name: /9/i })
  getByRole('button', { name: /10/i })
})

test('when button 9 is pressed', () => {
  const { getByRole } = render(<Pagination count={10} siblingCount={3} />)
  userEvent.click(getByRole('button', { name: /7/i }))
  userEvent.click(getByRole('button', { name: /9/i }))
  getByRole('button', { name: /4/i })
  getByRole('button', { name: /5/i })
  getByRole('button', { name: /6/i })
  getByRole('button', { name: /7/i })
  getByRole('button', { name: /8/i })
  getByRole('button', { name: /9/i })
  getByRole('button', { name: /10/i })
})

test('when button 10 is pressed', () => {
  const { getByRole } = render(<Pagination count={10} siblingCount={3} />)
  userEvent.click(getByRole('button', { name: /7/i }))
  userEvent.click(getByRole('button', { name: /10/i }))
  getByRole('button', { name: /4/i })
  getByRole('button', { name: /5/i })
  getByRole('button', { name: /6/i })
  getByRole('button', { name: /7/i })
  getByRole('button', { name: /8/i })
  getByRole('button', { name: /9/i })
  getByRole('button', { name: /10/i })
})

// sibling count = 2 and count = 15

test('renders the correct content', () => {
  const { getByRole } = render(<Pagination siblingCount={2} count={15} />)
  getByRole('button', { name: /1/i })
  getByRole('button', { name: /2/i })
  getByRole('button', { name: /3/i })
  getByRole('button', { name: /4/i })
  getByRole('button', { name: /5/i })
})

test('when button 1 is pressed', () => {
  const { getByRole } = render(<Pagination siblingCount={2} count={15} />)
  userEvent.click(getByRole('button', { name: /1/i }))
  getByRole('button', { name: /1/i })
  getByRole('button', { name: /2/i })
  getByRole('button', { name: /3/i })
  getByRole('button', { name: /4/i })
  getByRole('button', { name: /5/i })
})
test('when button 2 is pressed', () => {
  const { getByRole } = render(<Pagination siblingCount={2} count={15} />)
  userEvent.click(getByRole('button', { name: /2/i }))
  getByRole('button', { name: /1/i })
  getByRole('button', { name: /2/i })
  getByRole('button', { name: /3/i })
  getByRole('button', { name: /4/i })
  getByRole('button', { name: /5/i })
})
test('when button 3 is pressed', () => {
  const { getByRole } = render(<Pagination siblingCount={2} count={15} />)
  userEvent.click(getByRole('button', { name: /3/i }))
  getByRole('button', { name: /1/i })
  getByRole('button', { name: /2/i })
  getByRole('button', { name: /3/i })
  getByRole('button', { name: /4/i })
  getByRole('button', { name: /5/i })
})
test('when button 4 is pressed', () => {
  const { getByRole } = render(<Pagination siblingCount={2} count={15} />)
  userEvent.click(getByRole('button', { name: /4/i }))
  getByRole('button', { name: /2/i })
  getByRole('button', { name: /3/i })
  getByRole('button', { name: /4/i })
  getByRole('button', { name: /5/i })
  getByRole('button', { name: /6/i })
})
test('when button 5 is pressed', () => {
  const { getByRole } = render(<Pagination siblingCount={2} count={15} />)
  userEvent.click(getByRole('button', { name: /5/i }))
  getByRole('button', { name: /3/i })
  getByRole('button', { name: /4/i })
  getByRole('button', { name: /5/i })
  getByRole('button', { name: /6/i })
  getByRole('button', { name: /7/i })
})
test('when button 6 is pressed', () => {
  const { getByRole } = render(<Pagination siblingCount={2} count={15} />)
  userEvent.click(getByRole('button', { name: /5/i }))
  userEvent.click(getByRole('button', { name: /6/i }))
  getByRole('button', { name: /4/i })
  getByRole('button', { name: /5/i })
  getByRole('button', { name: /6/i })
  getByRole('button', { name: /7/i })
  getByRole('button', { name: /8/i })
})
test('when button 7 is pressed', () => {
  const { getByRole } = render(<Pagination siblingCount={2} count={15} />)
  userEvent.click(getByRole('button', { name: /5/i }))
  userEvent.click(getByRole('button', { name: /7/i }))
  getByRole('button', { name: /5/i })
  getByRole('button', { name: /6/i })
  getByRole('button', { name: /7/i })
  getByRole('button', { name: /8/i })
  getByRole('button', { name: /9/i })
})
test('when button 8 is pressed', () => {
  const { getByRole } = render(<Pagination siblingCount={2} count={15} />)
  userEvent.click(getByRole('button', { name: /5/i }))
  userEvent.click(getByRole('button', { name: /7/i }))
  userEvent.click(getByRole('button', { name: /8/i }))
  getByRole('button', { name: /6/i })
  getByRole('button', { name: /7/i })
  getByRole('button', { name: /8/i })
  getByRole('button', { name: /9/i })
  getByRole('button', { name: /10/i })
})

test('when button 9 is pressed', () => {
  const { getByRole } = render(<Pagination siblingCount={2} count={15} />)
  userEvent.click(getByRole('button', { name: /5/i }))
  userEvent.click(getByRole('button', { name: /7/i }))
  userEvent.click(getByRole('button', { name: /9/i }))
  getByRole('button', { name: /7/i })
  getByRole('button', { name: /8/i })
  getByRole('button', { name: /9/i })
  getByRole('button', { name: /10/i })
  getByRole('button', { name: /11/i })
})

test('when button 10 is pressed', () => {
  const { getByRole } = render(<Pagination siblingCount={2} count={15} />)
  userEvent.click(getByRole('button', { name: /5/i }))
  userEvent.click(getByRole('button', { name: /7/i }))
  userEvent.click(getByRole('button', { name: /9/i }))
  userEvent.click(getByRole('button', { name: /10/i }))
  getByRole('button', { name: /8/i })
  getByRole('button', { name: /9/i })
  getByRole('button', { name: /10/i })
  getByRole('button', { name: /11/i })
  getByRole('button', { name: /12/i })
})

test('when button 11 is pressed', () => {
  const { getByRole } = render(<Pagination siblingCount={2} count={15} />)
  userEvent.click(getByRole('button', { name: /5/i }))
  userEvent.click(getByRole('button', { name: /7/i }))
  userEvent.click(getByRole('button', { name: /9/i }))
  userEvent.click(getByRole('button', { name: /11/i }))
  getByRole('button', { name: /9/i })
  getByRole('button', { name: /10/i })
  getByRole('button', { name: /11/i })
  getByRole('button', { name: /12/i })
  getByRole('button', { name: /13/i })
})
test('when button 12 is pressed', () => {
  const { getByRole } = render(<Pagination siblingCount={2} count={15} />)
  userEvent.click(getByRole('button', { name: /5/i }))
  userEvent.click(getByRole('button', { name: /7/i }))
  userEvent.click(getByRole('button', { name: /9/i }))
  userEvent.click(getByRole('button', { name: /11/i }))
  userEvent.click(getByRole('button', { name: /12/i }))
  getByRole('button', { name: /10/i })
  getByRole('button', { name: /11/i })
  getByRole('button', { name: /12/i })
  getByRole('button', { name: /13/i })
  getByRole('button', { name: /14/i })
})
test('when button 13 is pressed', () => {
  const { getByRole } = render(<Pagination siblingCount={2} count={15} />)
  userEvent.click(getByRole('button', { name: /5/i }))
  userEvent.click(getByRole('button', { name: /7/i }))
  userEvent.click(getByRole('button', { name: /9/i }))
  userEvent.click(getByRole('button', { name: /11/i }))
  userEvent.click(getByRole('button', { name: /13/i }))
  getByRole('button', { name: /11/i })
  getByRole('button', { name: /12/i })
  getByRole('button', { name: /13/i })
  getByRole('button', { name: /14/i })
  getByRole('button', { name: /15/i })
})
test('when button 14 is pressed', () => {
  const { getByRole } = render(<Pagination siblingCount={2} count={15} />)
  userEvent.click(getByRole('button', { name: /5/i }))
  userEvent.click(getByRole('button', { name: /7/i }))
  userEvent.click(getByRole('button', { name: /9/i }))
  userEvent.click(getByRole('button', { name: /11/i }))
  userEvent.click(getByRole('button', { name: /13/i }))
  userEvent.click(getByRole('button', { name: /14/i }))
  getByRole('button', { name: /11/i })
  getByRole('button', { name: /12/i })
  getByRole('button', { name: /13/i })
  getByRole('button', { name: /14/i })
  getByRole('button', { name: /15/i })
})
test('when button 15 is pressed', () => {
  const { getByRole } = render(<Pagination siblingCount={2} count={15} />)
  userEvent.click(getByRole('button', { name: /5/i }))
  userEvent.click(getByRole('button', { name: /7/i }))
  userEvent.click(getByRole('button', { name: /9/i }))
  userEvent.click(getByRole('button', { name: /11/i }))
  userEvent.click(getByRole('button', { name: /13/i }))
  userEvent.click(getByRole('button', { name: /15/i }))
  getByRole('button', { name: /11/i })
  getByRole('button', { name: /12/i })
  getByRole('button', { name: /13/i })
  getByRole('button', { name: /14/i })
  getByRole('button', { name: /15/i })
})
